<section>
  <h3>User Reference</h3>

  <p>
    This is the <em>user</em> part of the Conan package references built in this ecosystem.
  </p>

  <BsForm @formLayout="inline" @model={{this.model}} as |form|>
    <form.element @controlType="input" @property="user" required />
  </BsForm>
</section>

<section>
  <h3>Conan Configuration</h3>

  <p>
    The build environment will be initialized with a Conan configuration from an 
    external git repository. Provide the <em>URL</em> of the git repository here.
    If the configuration is not located at the root of the repository but in 
    a subdirectory set <em>Path</em> to the location of the directory.
    If a branch other than the default branch should be used as a source of the configuration 
    this branch can optionally be specified in the field <em>Branch</em>. 
  </p>

  <BsForm @formLayout="vertical" @model={{this.model}} as |form|>
    <form.element @controlType="input" @label="URL" @property="conan_config_url" />
    <form.element @controlType="input" @label="Path" @property="conan_config_path" />
    <form.element @controlType="input" @label="Branch" @property="conan_config_branch" />
  </BsForm>
</section>

<section>
  <h3>Conan Remote</h3>

  <p>This ecosystem will store Conan packages at to one of the Conan remotes which are 
    defined by the Conan configuration above. Usually additional credentials are required to be 
    able to <em>upload</em> packages to the remote.
    Here, this remote and the credentials to access it are defined. Set <em>Remote</em>
    to the name of the remote as defined by the Conan configuration. The actual URL
    of the remote is then looked up via the configuration during the build. 
    If required proved a user name and a password. Before uploading Conan
    will login into the remote using this credentials.
  </p>

  <BsForm @formLayout="vertical" @model={{this.model}} as |form|>
    <form.element @controlType="input" @label="Remote" @property="conan_remote" />
    <form.element @controlType="input" @label="User" @property="conan_user" />
    <form.element @controlType="password" @label="Password" @property="conan_password" as |el|>
      <el.control autocomplete="off"/>
    </form.element>
  </BsForm>
</section>

<section>
  <h3>Public SSH Key</h3>

  <p>
    A SSH key was generated when the ecosystem was created. This is the corresponding public key. Make sure
    that the SSH repositories of the ecosystem provide read access to this key.
  </p>

  <TextDialog @title="Public SSH Key" @model={{this.model}} @property="public_ssh_key" @readonly={{true}} />
</section>

<section>
  <h3>Known Hosts</h3>

  <p>
    A list of known SSH hosts and their public SSH keys in the format of the  
    <code>known_hosts</code> file.
  </p>

  <TextDialog @title="Known Hosts" @model={{this.model}} @property="known_hosts" @readonly={{false}}/>
</section>

<section>
  <h3>Git HTTP credentials</h3>

  <p>
    A list credentials for Git HTTP servers. A Git credential helper is set up before Sonja 
    accesses Git repositories (for crawling repos or building packages). The helper will provide
    the credentials listed here. In other words, if a repository is set up with an HTTP URL 
    and requires authentification then they required credentials have to be provided here.
  </p>

  <CredentialEditor @model={{this.model}} @property="credentials" />
</section>

<section>
  <p>
    <BsButton @type="primary" @onClick={{this.save}}>Save</BsButton>
  </p>
</section>

